{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-mate\\\\task-mate-frontend\\\\src\\\\Components\\\\TaskItem.js\";\nimport React from 'react';\nimport './TaskItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onDelete,\n  onToggleComplete,\n  onEdit\n}) => {\n  const isDueToday = () => {\n    if (!task.dueDate) {\n      return false;\n    }\n    const today = new Date();\n    const dueDate = new Date(task.dueDate.slice(0, 10)); // Compare only the date part\n    return today.getFullYear() === dueDate.getFullYear() && today.getMonth() === dueDate.getMonth() && today.getDate() === dueDate.getDate();\n  };\n  const titleStyle = {\n    fontSize: '1.2em',\n    fontWeight: 'bold',\n    textDecoration: task.completed ? 'line-through' : '',\n    color: task.completed ? '#777' : isDueToday() ? 'red' : '#eee' // Apply red if due today\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => onToggleComplete(task._id, !task.completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: titleStyle,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"due-date\",\n        children: [\"Due Date: \", task.dueDate ? task.dueDate.slice(0, 10) : 'No Due Date']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"category\",\n        children: [\"Category: \", task.category || 'No Category']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => onEdit(task),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(task._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskItem","task","onDelete","onToggleComplete","onEdit","isDueToday","dueDate","today","Date","slice","getFullYear","getMonth","getDate","titleStyle","fontSize","fontWeight","textDecoration","completed","color","className","children","type","checked","onChange","_id","fileName","_jsxFileName","lineNumber","columnNumber","style","title","description","category","onClick","_c","$RefreshReg$"],"sources":["D:/task-mate/task-mate-frontend/src/Components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\nimport './TaskItem.css';\r\n\r\nconst TaskItem = ({ task, onDelete, onToggleComplete, onEdit }) => {\r\n  const isDueToday = () => {\r\n    if (!task.dueDate) {\r\n      return false;\r\n    }\r\n    const today = new Date();\r\n    const dueDate = new Date(task.dueDate.slice(0, 10)); // Compare only the date part\r\n    return (\r\n      today.getFullYear() === dueDate.getFullYear() &&\r\n      today.getMonth() === dueDate.getMonth() &&\r\n      today.getDate() === dueDate.getDate()\r\n    );\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontSize: '1.2em',\r\n    fontWeight: 'bold',\r\n    textDecoration: task.completed ? 'line-through' : '',\r\n    color: task.completed ? '#777' : (isDueToday() ? 'red' : '#eee'), // Apply red if due today\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-item\">\r\n      <div className=\"task-item-details\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={task.completed}\r\n          onChange={() => onToggleComplete(task._id, !task.completed)}\r\n        />\r\n        <h3 style={titleStyle}>\r\n          {task.title}\r\n        </h3>\r\n        <p>{task.description}</p>\r\n        <p className=\"due-date\">Due Date: {task.dueDate ? task.dueDate.slice(0, 10) : 'No Due Date'}</p>\r\n        <p className=\"category\">Category: {task.category || 'No Category'}</p>\r\n      </div>\r\n      <div>\r\n        <button className=\"edit-button\" onClick={() => onEdit(task)}>\r\n          Edit\r\n        </button>\r\n        <button onClick={() => onDelete(task._id)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}