{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-mate\\\\task-mate-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './Components/TaskList';\nimport TaskForm from './Components/TaskForm';\nimport EditTaskForm from './Components/EditTaskForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [refreshFlag, setRefreshFlag] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(''); // New state for search\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [refreshFlag]);\n  const handleTaskAdded = newTask => {\n    setTasks(currentTasks => [...currentTasks, newTask]);\n    setRefreshFlag(prev => !prev);\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      setTasks(currentTasks => currentTasks.filter(task => task._id !== id));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleToggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`http://localhost:5000/tasks/${id}/status`, {\n        completed\n      });\n      setTasks(currentTasks => currentTasks.map(task => task._id === id ? {\n        ...task,\n        completed\n      } : task));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n  const handleSaveEdit = async updatedTask => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${updatedTask._id}`, updatedTask);\n      setTasks(currentTasks => currentTasks.map(task => task._id === updatedTask._id ? updatedTask : task));\n      setEditingTask(null);\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      if (searchQuery) {\n        try {\n          const response = await axios.get(`http://localhost:5000/tasks/search?query=${searchQuery}`);\n          setTasks(response.data);\n        } catch (error) {\n          console.error('Error searching tasks:', error);\n        }\n      } else {\n        // If the search query is empty, fetch all tasks again\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n      }\n    };\n    fetchSearchResults();\n  }, [searchQuery]); // Re-run when searchQuery changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2em',\n        fontWeight: 'bold',\n        marginBottom: '20px'\n      },\n      children: \"Task Mate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search tasks...\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      style: {\n        padding: '8px',\n        borderRadius: '5px',\n        border: '1px solid #ccc',\n        marginBottom: '15px',\n        width: '100%',\n        boxSizing: 'border-box'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editingTask,\n      onSave: handleSaveEdit,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: handleDeleteTask,\n      onToggleComplete: handleToggleComplete,\n      onEdit: handleEdit\n    }, refreshFlag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MZ/wpBLuDz3En65U/9/Ewk8Crm4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","TaskForm","EditTaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","refreshFlag","setRefreshFlag","editingTask","setEditingTask","searchQuery","setSearchQuery","fetchTasks","response","get","data","error","console","handleTaskAdded","newTask","currentTasks","prev","handleDeleteTask","id","delete","filter","task","_id","handleToggleComplete","completed","patch","map","handleEdit","handleSaveEdit","updatedTask","put","handleCancelEdit","handleSearchChange","event","target","value","fetchSearchResults","style","fontFamily","padding","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","borderRadius","border","width","boxSizing","onTaskAdded","onSave","onCancel","onDelete","onToggleComplete","onEdit","_c","$RefreshReg$"],"sources":["D:/task-mate/task-mate-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './Components/TaskList';\nimport TaskForm from './Components/TaskForm';\nimport EditTaskForm from './Components/EditTaskForm';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [refreshFlag, setRefreshFlag] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(''); // New state for search\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [refreshFlag]);\n\n  const handleTaskAdded = (newTask) => {\n    setTasks(currentTasks => [...currentTasks, newTask]);\n    setRefreshFlag(prev => !prev);\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      setTasks(currentTasks => currentTasks.filter(task => task._id !== id));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleToggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`http://localhost:5000/tasks/${id}/status`, { completed });\n      setTasks(currentTasks =>\n        currentTasks.map(task =>\n          task._id === id ? { ...task, completed } : task\n        )\n      );\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n\n  const handleEdit = (task) => {\n    setEditingTask(task);\n  };\n\n  const handleSaveEdit = async (updatedTask) => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${updatedTask._id}`, updatedTask);\n      setTasks(currentTasks =>\n        currentTasks.map(task =>\n          task._id === updatedTask._id ? updatedTask : task\n        )\n      );\n      setEditingTask(null);\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      if (searchQuery) {\n        try {\n          const response = await axios.get(`http://localhost:5000/tasks/search?query=${searchQuery}`);\n          setTasks(response.data);\n        } catch (error) {\n          console.error('Error searching tasks:', error);\n        }\n      } else {\n        // If the search query is empty, fetch all tasks again\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n      }\n    };\n\n    fetchSearchResults();\n  }, [searchQuery]); // Re-run when searchQuery changes\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', padding: '20px' }}>\n      <h1 style={{ fontSize: '2em', fontWeight: 'bold', marginBottom: '20px' }}>Task Mate</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search tasks...\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n        style={{ padding: '8px', borderRadius: '5px', border: '1px solid #ccc', marginBottom: '15px', width: '100%', boxSizing: 'border-box' }}\n      />\n      <TaskForm onTaskAdded={handleTaskAdded} />\n      {editingTask && (\n        <EditTaskForm\n          task={editingTask}\n          onSave={handleSaveEdit}\n          onCancel={handleCancelEdit}\n        />\n      )}\n      <TaskList\n        tasks={tasks}\n        onDelete={handleDeleteTask}\n        onToggleComplete={handleToggleComplete}\n        onEdit={handleEdit}\n        key={refreshFlag}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}