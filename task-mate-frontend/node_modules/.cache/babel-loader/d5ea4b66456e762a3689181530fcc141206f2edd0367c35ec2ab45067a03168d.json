{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-mate\\\\task-mate-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './Components/TaskList';\nimport TaskForm from './Components/TaskForm';\nimport EditTaskForm from './Components/EditTaskForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [refreshFlag, setRefreshFlag] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterCategory, setFilterCategory] = useState(''); // New state for category filter\n  const [availableCategories, setAvailableCategories] = useState([]); // State for dropdown options\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n        // Extract unique categories for the dropdown\n        const categories = [...new Set(response.data.map(task => task.category).filter(Boolean))];\n        setAvailableCategories(['', ...categories]); // Add an empty option for \"All\"\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [refreshFlag]);\n  const handleTaskAdded = newTask => {\n    setTasks(currentTasks => [...currentTasks, newTask]);\n    setRefreshFlag(prev => !prev);\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      setTasks(currentTasks => currentTasks.filter(task => task._id !== id));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleToggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`http://localhost:5000/tasks/${id}/status`, {\n        completed\n      });\n      setTasks(currentTasks => currentTasks.map(task => task._id === id ? {\n        ...task,\n        completed\n      } : task));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n  const handleSaveEdit = async updatedTask => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${updatedTask._id}`, updatedTask);\n      setTasks(currentTasks => currentTasks.map(task => task._id === updatedTask._id ? updatedTask : task));\n      setEditingTask(null);\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleCategoryChange = event => {\n    setFilterCategory(event.target.value);\n  };\n  useEffect(() => {\n    const fetchFilteredTasks = async () => {\n      try {\n        let url = 'http://localhost:5000/tasks';\n        if (searchQuery) {\n          url = `http://localhost:5000/tasks/search?query=${searchQuery}`;\n        } else if (filterCategory) {\n          url = `http://localhost:5000/tasks/category/${filterCategory}`;\n        }\n        const response = await axios.get(url);\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching filtered tasks:', error);\n      }\n    };\n    fetchFilteredTasks();\n  }, [searchQuery, filterCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2em',\n        fontWeight: 'bold',\n        marginBottom: '20px'\n      },\n      children: \"Task Mate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filterCategory,\n      onChange: handleCategoryChange,\n      style: {\n        padding: '8px',\n        borderRadius: '5px',\n        border: '1px solid #ccc',\n        marginBottom: '10px',\n        width: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), availableCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category,\n        children: category || 'No Category'\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search tasks...\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      style: {\n        padding: '8px',\n        borderRadius: '5px',\n        border: '1px solid #ccc',\n        marginBottom: '15px',\n        width: '100%',\n        boxSizing: 'border-box'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editingTask,\n      onSave: handleSaveEdit,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: handleDeleteTask,\n      onToggleComplete: handleToggleComplete,\n      onEdit: handleEdit\n    }, refreshFlag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/QaddFzxMKx1WRAINEOQ9r69Okk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","TaskForm","EditTaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","refreshFlag","setRefreshFlag","editingTask","setEditingTask","searchQuery","setSearchQuery","filterCategory","setFilterCategory","availableCategories","setAvailableCategories","fetchTasks","response","get","data","categories","Set","map","task","category","filter","Boolean","error","console","handleTaskAdded","newTask","currentTasks","prev","handleDeleteTask","id","delete","_id","handleToggleComplete","completed","patch","handleEdit","handleSaveEdit","updatedTask","put","handleCancelEdit","handleSearchChange","event","target","value","handleCategoryChange","fetchFilteredTasks","url","style","fontFamily","padding","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","borderRadius","border","width","type","placeholder","boxSizing","onTaskAdded","onSave","onCancel","onDelete","onToggleComplete","onEdit","_c","$RefreshReg$"],"sources":["D:/task-mate/task-mate-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './Components/TaskList';\nimport TaskForm from './Components/TaskForm';\nimport EditTaskForm from './Components/EditTaskForm';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [refreshFlag, setRefreshFlag] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterCategory, setFilterCategory] = useState(''); // New state for category filter\n  const [availableCategories, setAvailableCategories] = useState([]); // State for dropdown options\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/tasks');\n        setTasks(response.data);\n        // Extract unique categories for the dropdown\n        const categories = [...new Set(response.data.map(task => task.category).filter(Boolean))];\n        setAvailableCategories(['', ...categories]); // Add an empty option for \"All\"\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [refreshFlag]);\n\n  const handleTaskAdded = (newTask) => {\n    setTasks(currentTasks => [...currentTasks, newTask]);\n    setRefreshFlag(prev => !prev);\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      setTasks(currentTasks => currentTasks.filter(task => task._id !== id));\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleToggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`http://localhost:5000/tasks/${id}/status`, { completed });\n      setTasks(currentTasks =>\n        currentTasks.map(task =>\n          task._id === id ? { ...task, completed } : task\n        )\n      );\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n\n  const handleEdit = (task) => {\n    setEditingTask(task);\n  };\n\n  const handleSaveEdit = async (updatedTask) => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${updatedTask._id}`, updatedTask);\n      setTasks(currentTasks =>\n        currentTasks.map(task =>\n          task._id === updatedTask._id ? updatedTask : task\n        )\n      );\n      setEditingTask(null);\n      setRefreshFlag(prev => !prev);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    setFilterCategory(event.target.value);\n  };\n\n  useEffect(() => {\n    const fetchFilteredTasks = async () => {\n      try {\n        let url = 'http://localhost:5000/tasks';\n        if (searchQuery) {\n          url = `http://localhost:5000/tasks/search?query=${searchQuery}`;\n        } else if (filterCategory) {\n          url = `http://localhost:5000/tasks/category/${filterCategory}`;\n        }\n        const response = await axios.get(url);\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching filtered tasks:', error);\n      }\n    };\n\n    fetchFilteredTasks();\n  }, [searchQuery, filterCategory]);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', padding: '20px' }}>\n      <h1 style={{ fontSize: '2em', fontWeight: 'bold', marginBottom: '20px' }}>Task Mate</h1>\n      <select\n        value={filterCategory}\n        onChange={handleCategoryChange}\n        style={{ padding: '8px', borderRadius: '5px', border: '1px solid #ccc', marginBottom: '10px', width: '200px' }}\n      >\n        <option value=\"\">All Categories</option>\n        {availableCategories.map(category => (\n          <option key={category} value={category}>{category || 'No Category'}</option>\n        ))}\n      </select>\n      <input\n        type=\"text\"\n        placeholder=\"Search tasks...\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n        style={{ padding: '8px', borderRadius: '5px', border: '1px solid #ccc', marginBottom: '15px', width: '100%', boxSizing: 'border-box' }}\n      />\n      <TaskForm onTaskAdded={handleTaskAdded} />\n      {editingTask && (\n        <EditTaskForm\n          task={editingTask}\n          onSave={handleSaveEdit}\n          onCancel={handleCancelEdit}\n        />\n      )}\n      <TaskList\n        tasks={tasks}\n        onDelete={handleDeleteTask}\n        onToggleComplete={handleToggleComplete}\n        onEdit={handleEdit}\n        key={refreshFlag}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}